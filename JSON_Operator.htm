<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Operators &amp; Expressions">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>JSON Operator</title>
        <link href="Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="Resources/Stylesheets/Styles.css" rel="stylesheet" />
        <script src="Resources/Scripts/jquery.min.js">
        </script>
        <script src="Resources/Scripts/plugins.min.js">
        </script>
        <script src="Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="Default.htm#JSON_Operator.htm">Open topic with navigation</a>
        </p>
        <script type="text/javascript">/* <![CDATA[ */
			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-16579649-1']);
			_gaq.push(['_trackPageview']);
			(function() {
			var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
			ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			})();
		/* ]]> */</script>
        <h1>JSON Operator</h1>
        <p>The JSON Operator is a search query language operator that allows you to extract values from JSON input. Because JSON supports both nested keys and arrays that contain ordered sequences of values, the Sumo&#160;Logic JSON Operator allows you to extract:</p>
        <ul>
            <li value="1">Single, top-level fields.</li>
            <li value="2">Multiple fields.</li>
            <li value="3">Nested keys.</li>
            <li value="4">Keys in arrays.</li>
        </ul>
        <p>The JSON Operator also supports a nodrop option you can use if messages contain invalid JSON&#160;values.</p>
        <h4>Extracting a single top-level field</h4>
        <p>The JSON Operator allows you to extract a single, top-level field. For example, to extract @message:</p>
        <p class="code">* | json "@message" |&#160;count by %"@message" |&#160;sort %"@message"</p>
        <h4>Extracting multiple fields</h4>
        <p>Multiple fields can be extracted in a single operation:</p>
        <p class="code">* | json "@source", "@fields.timestamp" | count by %"@source", %"@fields.timestamp" | sort %"@fields.timestamp", %"@source"</p>
        <p>In addition, you can assign names to fields that differ from their assigned names. To use <code>ts </code>instead of <code>timestamp </code>and <code>src </code>instead of <code>source</code>:</p>
        <p class="code">* | json "@source", "@fields.timestamp" as src, ts | count by src, ts | sort ts, src</p>
        <h4>Extracting a nested key</h4>
        <p>To extract the nested key <code>timestamp </code>from <code>@fields </code>we'll specify the path using dot notation:</p>
        <p class="code">* | json "@fields.timestamp" | count by %"@fields.timestamp" | sort %"@fields.timestamp"</p>
        <h4>Finding values in a JSON array</h4>
        <p>In some cases, fields values are actually array, like <code>@tags</code> in the example below:</p>
        <p>
            <img src="Resources/Images/JSON_sample_474x105.png" style="width: 474;height: 105;" />
        </p>
        <p>By instructing the JSON operator to extract <code>@tags</code>, it returns a list of the values in the array:<code> ["syslog", "pkg-verify"]</code>.</p>
        <p class="Tip">To refer to one specific entry in the array, provide the array's index: <code>* | json "@tags[1]" </code></p>
        <h4>Using the nodrop option</h4>
        <p>By default the JSON operator drops messages that don't use the specified key or keys, or messages that use invalid JSON keys. However, the nodrop option will prevent this and set the extracted field values to null (empty):</p>
        <p class="code">* | json "@source" nodrop</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="Default.htm#JSON_Operator.htm">Open topic with navigation</a>
        </p>
    </body>
</html>