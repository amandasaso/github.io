<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Search|Parsing">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Parse Operator</title>
        <link href="Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="Resources/Stylesheets/Styles.css" rel="stylesheet" />
        <script src="Resources/Scripts/jquery.min.js">
        </script>
        <script src="Resources/Scripts/plugins.min.js">
        </script>
        <script src="Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="Default.htm#Parse__Anchor_.htm">Open topic with navigation</a>
        </p>
        <script type="text/javascript">/* <![CDATA[ */
			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-16579649-1']);
			_gaq.push(['_trackPageview']);
			(function() {
			var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
			ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			})();
		/* ]]> */</script>
        <h1>Parse Operator</h1>
        <p>The Parse (or Parse Anchor) operator parses strings according to specified start and stop anchors, and then labels them as fields for use in subsequent aggregation functions in the query such as sorting, grouping, or other functions. For help in learning to parse strings, see <a href="Parsing_and_Naming_a_Field.htm">Extracting and Naming a Field</a>.</p>
        <p class="Note">User-created fields, such as extracted or parsed fields, can be named using alphanumeric characters as well as underscores ("_"), and dashes ("-­"), and must start and end with an alphanumeric character.</p>
        <p style="font-weight: bold;">Syntax:</p>
        <ul>
            <li value="1">... | parse "start_anchor*stop_anchor" as fieldname | ...</li>
            <li value="2">... | parse "start_anchor*stop_anchor" as fieldname no drop| ...</li>
            <li value="3">Tip: The operator "parse anchor" can be written as "parse".</li>
        </ul>
        <p style="font-weight: bold;">Rules:</p>
        <ul>
            <li value="1">Fieldname can use underscores or hyphens, but must start and end with an alphanumeric character.</li>
            <li value="2">Supports wildcard * for anchor text. Two wildcard characters cannot appear next to each other, so "&#160;**&#160;" is not valid.</li>
            <li value="3">The number of wildcards in the pattern string must match the number of variables.</li>
            <li value="4">Multiple expressions are allowed for a single parse operator.</li>
            <li value="5">If you add the option <b>nodrop</b>, then messages that match zero terms in the expression are included in the output. (See the section on <a href="Parse_nodrop_Option.htm">Parse … nodrop</a> for a more thorough explanation of the <b>nodrop</b> option)</li>
            <li value="6">Can be used with <a href="Parse_Regex.htm" style="font-weight: bold;">parse regex</a> operator.</li>
        </ul>
        <p style="font-weight: bold;">Examples:</p>
        <p>Sample log message:</p>
        <p class="IndentCode">Aug 2 04:06:08: host=10.1.1.124: local/ssl2 notice mcpd[3772]: User=jsmith@demo.com: severity=warning: 01070638:5: Pool member 172.31.51.22:0 monitor status down.</p>
        <ul>
            <li value="1">Example 1: ... | parse "user=*:" as user | ...</li>
            <li value="2">Example 2: ... | parse "user=*:" as user nodrop | ...<br></br>Includes messages that do not match the initial query.</li>
            <li value="3">Example 3: status AND down | parse "user=*:" as user | ...<br />In the above example, the start_anchor is "user=" and the stop_anchor is ":" which ends the email address. The asterisk is the glob representing the parsed term. The above example will create a new field for each message named "user" and that field will contain the value of the email address, in this case jsmith@demo.com.</li>
        </ul>
        <p style="padding-left: 30px;">Parse anchor also allows you to extract multiple fields in one command:</p>
        <ul>
            <li value="1">Example: status AND down | parse "user=*: severity=*:" as (user, severity) | ...<br />The example above creates two fields from the sample log message: user=jsmith@demo.com and severity=warning </li>
        </ul>
        <p>&#160;</p>
        <p>&#160;</p>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="Default.htm#Parse__Anchor_.htm">Open topic with navigation</a>
        </p>
    </body>
</html>