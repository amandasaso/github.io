<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Search|Search Basics">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Running a basic search</title>
        <link href="Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="Resources/Stylesheets/Styles.css" rel="stylesheet" />
        <script src="Resources/Scripts/jquery.min.js">
        </script>
        <script src="Resources/Scripts/plugins.min.js">
        </script>
        <script src="Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="Default.htm#Getting_Started_Using_Search.htm">Open topic with navigation</a>
        </p>
        <script type="text/javascript">/* <![CDATA[ */
			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-16579649-1']);
			_gaq.push(['_trackPageview']);
			(function() {
			var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
			ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			})();
		/* ]]> */</script>
        <h1>Running a basic search</h1>
        <p>After configuring Sources to collect the events and logs you need, you can begin using search within minutes. Sumo Logic search syntax uses logical and familiar operators allowing you to create ad hoc queries quickly and efficiently. You can <a href="Saving_a_Search.htm">save searches</a> to re-use later or to <a href="Scheduling_a_Search.htm">run as regularly scheduled searches</a> that can be delivered to your email address.</p>
        <p>The basis of Sumo Logic Search Syntax is a funnel or "pipeline" concept. Beginning from all of your current Sumo Logic data, you enter keywords and operators separated by pipes ("|"). Each operator acts on the results from the previous operator so that you can progressively filter and pinpoint your search until you find exactly what youâ€™re looking for. A search query is typically formatted something like this:</p>
        <p style="font-weight: bold;">keyword search | parse | where | group-by | sort | limit </p>
        <p>Let's start with a basic search:</p>
        <ol>
            <li value="1">Sign into the <b><a href="https://service.sumologic.com/ui/" target="_blank">Sumo Logic Web Application</a></b>.</li>
            <li value="2">Click <b>Search</b> and enter a simple key term like "error" in the search field, or type an asterisk wildcard (*) to find all messages. <br /><br /><img src="Resources/Images/Search_basic_538x141.png" style="width: 538;height: 141;" /><br /></li>
            <li value="3">Hit <b>Enter</b> or click <b>Start</b>.<br /></li>
            <li value="4">Sumo Logic returns all the log  entries containing the search term in the Messages tab below the histogram. </li>
        </ol>
        <p>Let's take a look at a slightly more complex search query to see how queries are formed. All queries begin with a keyword or string search. Wildcards are allowed including an asterisk (*) for zero or more characters and a question mark (?) for a single character. Strings can be parsed based on start and stop anchor points in messages and then aliased as user-created fields. All operators are separated by the pipe symbol (|). </p>
        <p class="KeepWithNext">Here's an example:</p>
        <p class="Indent">
            <img src="Resources/Images/query_syntax_497x123.jpg" style="width: 497;height: 123;" />
        </p>
        <p>You can expand the complexity of your search queries with Sumo Logic search operators. Learn more about the basics of <a href="Search_Syntax.htm">Sumo Logic Search Syntax</a>. </p>
        <h2>Keyword search expression</h2>
        <p>All search queries begin with a full-text search expression. For simplicity, we refer to this part of the search as a keyword search. Boolean logic and wildcards enable you to search for multiple terms, express logic about term distribution within messages, and specify partial terms with wildcards: use an asterisk (*), for zero or more characters, or a question mark (?) for a single character. With respect to Boolean syntax, the AND operator is implicit, meaning you do not need to type AND when entering multiple terms. Note that keyword searches are case-insensitive.</p>
        <p>If you enter a phrase query such as an email or IP address, the Sumo Logic search engine looks for the individual indexed terms appearing next to each other. You can use a wildcard to represent a full term (This is allowed: jsmith@*.com), but not a partial term (This won't work: jsmith@some*re.com). Remember to enclose any keyword phrases containing spaces or special characters within quotes.</p>
        <p>Everything you type in the query field before the first pipe is always a full-text search expression, even if it's just a wildcard (*) to find all results. </p>
        <p>Some examples:</p>
        <ul>
            <li value="1"> * </li>
            <li value="2"> error OR exception OR fail* NOT debug </li>
            <li value="3">_sourceCategory="Cisco routers" </li>
            <li value="4">("hr dept" "failed login") OR ("IT dept" "failed login") </li>
        </ul>
        <p data-mc-conditions="Default.ScreenOnly">In the example above, the field "_sourceCategory" is a metadata field created during configuration of a Source. For more information, see <a href="Adding_Metadata_to_Sources.htm">Adding searchable metadata to Sources.</a></p>
        <h2>Sumo Logic operators</h2>
        <p>For detailed information about Sumo Logic Search syntax, see the <a href="Search_Syntax.htm">Search Syntax Reference</a>. For a quick overview, here are the main Sumo Logic search operators with a syntax example for each:</p>
        <ul>
            <li value="1"><a href="Parse_Expressions.htm"><strong style="font-weight: bold;">Parse</strong></a>
                <br />... | parse "start_anchor*stop_anchor" as fieldname | ...<br />Parse options include "parse anchor" as shown in the syntax example, or "parse regex" for using regular expressions to form more complex parse queries. It is acceptable to use "parse" for "parse anchor", or "extract" for "parse regex". For instructions on how to extract fields from messages using the parse operator, see <a href="Parsing_and_Naming_a_Field.htm">Parsing and Naming a Field.</a></li>
            <li value="2"><strong><a href="Where.htm"><strong style="font-weight: bold;">Where</strong></a></strong>
                <br />... | where someField any_Boolean_operator someValue | ...<b><br /></b>A conditional operator that can precede or follow another operator. Example combinations include "where x matches y", "where x in (a, b, c)", "where x not in (a, b, c)" and "where a &gt; 1 and b / 4 &lt; sqrt(x)".</li>
            <li value="3"><a href="Ternary_Expressions.htm" style="font-weight: bold;">If</a>
                <br />... | if(condition, value_if_true, value_if_false) as alias_field | ...<br />A ternary operator used to evaluate a condition as either true or false, with values assigned for each outcome. It is a shorthand way to express an if-else condition.</li>
            <li value="4"><strong><a href="Detecting_Patterns_with_Summarize.htm"><strong style="font-weight: bold;">Summarize</strong></a></strong>
                <br />keyword expression | summarize <br />Summarize uses fuzzy logic and soft matching for pattern detection. The summarize operator automatically groups messages by content similarity into clusters. For more information about the summarize algorithm, see <a href="Detecting_Patterns_with_Summarize.htm">Detecting Patterns with Summarize</a>.</li>
            <li value="5"><strong><a href="Timeslice_Operator.htm"><strong style="font-weight: bold;">Timeslice</strong></a></strong>
                <br />... | timeslice by time_period as fieldname<br />... | timeslice 25 buckets<br />Timeslice segregates search results by fixed time period, or by any number of buckets over a time range.</li>
            <li value="6"><strong><a href="Group_Operator_and_Group-by_Functions.htm" style="font-weight: bold;">Group</a><br /></strong>... | group-by-function (field_to_operate_on) group by (field_to_group_by) | ...<br />Group-by functions include count, count_distinct, sum, avg, stddev, max, min,  last, and first. You can use "group" or "by" instead of "group by" so "count (*) group by user" is equivalent to "count by user". All group-by functions create a corresponding field preceded by an underscore, for example, _count.</li>
            <li value="7"><strong><a href="Sort.htm"><strong style="font-weight: bold;">Sort</strong></a></strong>
                <br />... | sort by sort_by_clause field_to_sort_by | ...<br />The Sort operator orders aggregate search results.</li>
            <li value="8"><strong><a href="Limit.htm" style="font-weight: bold;">Limit</a></strong>
                <br />... | limit 20  <br />Use the Limit operator to reduce the number of messages or aggregated results returned.</li>
            <li value="9"><strong><a href="Math_Expressions.htm"><strong style="font-weight: bold;">Math Expressions</strong></a></strong>
                <br />... | expression as alias   | ...<br />Supported mathematical operators include: +, -, *, /, %, as well as the ternary boolean operator "condition ? v0 : v1". A set of mathematical functions are also supported including abs, ceil, floor, round, exp, log, log10, pow, signum, sqrt, sin, cos, asin and acos.</li>
        </ul>
        <p class="Tip">If you have a set of messages displayed in the Messages tab, you can click any term within a message to add it to the query you are building (AND clicked_term). You can also use Alt-click to remove a term from results (!clicked_term, or NOT&#160;clicked_term).</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="Default.htm#Getting_Started_Using_Search.htm">Open topic with navigation</a>
        </p>
    </body>
</html>