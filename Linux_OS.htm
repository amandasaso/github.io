<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Search|Suggested Searches">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Suggested Searches for Linux OS&#160;Systems </title>
        <link href="Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="Resources/Stylesheets/Styles.css" rel="stylesheet" />
        <script src="Resources/Scripts/jquery.min.js">
        </script>
        <script src="Resources/Scripts/plugins.min.js">
        </script>
        <script src="Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="Default.htm#Linux_OS.htm">Open topic with navigation</a>
        </p>
        <script type="text/javascript">/* <![CDATA[ */
			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-16579649-1']);
			_gaq.push(['_trackPageview']);
			(function() {
			var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
			ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			})();
		/* ]]> */</script>
        <h1>Suggested Searches for Linux OS&#160;Systems </h1>
        <p>These suggested searches cover some of the most common scenarios for monitoring user activity and security activity on a Linux server. These searches should work on RedHat, Debian, SuSe platforms, as well as their derivations (e.g. CentOS, Ubuntu, OpenSuSe). </p>
        <p>You can enter these queries into the Search field of the Sumo Logic Web Application as a starting baseline, and then customize a query and time range for your system.  Be sure to <a href="Saving_a_Search.htm">save your search queries</a> if you plan to run them often.</p>
        <p>It's assumed that common Linux OS logs are collected (for example: /var/log/*).</p>
        <p>The <b>_sourceCategory</b> fields shown in these sample queries are based on  the following Linux logs and their metadata:</p>
        <ul>
            <li value="1"><b>Generic system log:</b> Typically named /var/log/syslog or /var/log/messages<br /><b>Meta field:</b> SourceCategory = OS/Linux/System</li>
            <li value="2"><b>Authentication log:</b> Typically named /var/log/auth or /var/log/auth.log<br /><b>Meta field:</b> SourceCategory=OS/Linux/Security</li>
        </ul>
        <p>These logs might have also been collected by the Collector (if selected during its installation).</p>
        <h2>User activity</h2>
        <p>These searches are intended to help you understand how privileged and non-privileged users are authenticating to and using your Linux servers.</p>
        <p style="font-weight: bold;">Successful User Login events</p>
        <p style="font-weight: bold;"><span style="font-weight: normal;">Returns all successful remote and local logins by a user.</span>
        </p>
        <ul>
            <li value="1">Suggested time range: -1 day</li>
        </ul>
        <ul>
            <li value="1">_sourceCategory=OS/Linux/Security ("su:" or "sudo:" or "sshd:" or "sshd[" or "pam:") (("Accepted" and "pam") or "session" or ("to" and "on")) !"closed"<br />| parse regex "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s(?&lt;process_name&gt;\w*):\s+(?&lt;message&gt;.*)$" nodrop<br />| parse regex  "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s(?&lt;process_name&gt;\S*)\[\d+\]:\s+(?&lt;message&gt;.*)$" nodrop<br />| parse "session * for user * by *(uid=*)" as (action,dest_user,src_user,src_user_id) nodrop<br />| parse regex "session (?&lt;action&gt;\w*) for user (?&lt;dest_user&gt;\S*)" nodrop<br />| parse "Accepted keyboard-interactive/pam for * from * port * *" as (dest_user,src_hostname,src_port,protocol)<br />| where dest_user!=""</li>
        </ul>
        <p style="font-weight: bold;">All failed authentication attempts</p>
        <p style="font-weight: bold;"><span style="font-weight: normal;">Returns all failed authentication attempts by either a user or a process.</span>
        </p>
        <ul>
            <li value="1">Suggested time range: -1 day</li>
            <li value="2">_sourceCategory=OS/Linux/* "Authentication failure"<br />| parse regex "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s(?&lt;process_name&gt;\w*)(?:\[|:)" nodrop<br />| parse " user = * " as dest_user nodrop<br />| parse "User *: Authentication failure" as dest_user nodrop<br />| parse " user=*" as dest_user nodrop</li>
        </ul>
        <p style="font-weight: bold;">Root activities</p>
        <p style="font-weight: normal;">Returns all sudo/su attempts, or activities by "root" user. Modify to include other privileged users that you want to track in your environment.</p>
        <ul>
            <li value="1">_sourceCategory=OS/Linux/Security ("sudo" or "root" or "su")<br />| parse regex "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s" nodrop<br />| extract "sudo:\s+(?&lt;src_user&gt;[^ ]+?)\s:.+?USER=(?&lt;dest_user&gt;[^ ]+?)\s+"  nodrop<br />| parse regex "COMMAND=(?&lt;command&gt;[^$]*)$" nodrop<br />| parse " user * " as dest_user nodrop | parse " user *" as dest_user nodrop<br />| where command !="" or dest_user in ("root") or src_user in ("root")</li>
        </ul>
        <p style="font-weight: bold;">Failed SU attempts</p>
        <p style="font-weight: normal;">Returns all failed SU attempts.</p>
        <ul>
            <li value="1">_sourceCategory=OS/Linux/Security ("authentication failure" or "FAILED SU") ("su:" or "su[")<br />| parse regex "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s" nodrop<br />| parse "ruser=* rhost=* user=*" as src_user,src_hostname, dest_user nodrop<br />| parse "Authentication failure for * from *" as dest_user,src_hostname nodrop<br />| parse "FAILED SU (to *) * on" as dest_user,src_user  nodrop<br />| parse "FAILED su for * by *" as dest_user,src_user  nodrop<br />| where dest_user!="" and src_user!=""</li>
        </ul>
        <p>&#160;</p>
        <h2>Security activity monitoring</h2>
        <p style="font-weight: bold;">New users</p>
        <p style="font-weight: bold;"><span style="font-weight: normal;">Returns a list of all new users.</span>
        </p>
        <ul>
            <li value="1">Suggested time range: -1 day</li>
            <li value="2">_sourceCategory=OS/Linux/S* "useradd" and (("new user") or ("new account")) <br />| parse regex "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s(?&lt;process_name&gt;\w*)(?:\[|:)" nodrop <br />| parse "name=*, UID=*, GID=*, home=*, shell=*" as dest_user,dest_uid,dest_gid,home_dir,shell nodrop <br />| parse "account=*, uid=*, gid=*, home=*, shell=*," as dest_user,dest_uid,dest_gid,home_dir,shell nodrop</li>
        </ul>
        <p style="font-weight: bold;">New groups</p>
        <p style="font-weight: normal;">Returns a list of all new groups.</p>
        <ul>
            <li value="1">Suggested time range: -1 day</li>
            <li value="2">_sourceCategory=OS/Linux/S* "new group"<br />| parse regex "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s(?&lt;process_name&gt;\w*)(?:\[|:)" nodrop<br />| parse "name=*, GID=*" as dest_group,dest_gid nodrop<br />| parse "group=*, gid=*," as dest_group,dest_gid nodrop</li>
        </ul>
        <p style="font-weight: bold;">Existing users added to privileged groups</p>
        <p style="font-weight: bold;"><span style="font-weight: normal;">Returns all messages that indicate a user being added to an administrative group.</span> <![CDATA[ ]]><b>Modify this query to include the IDs or names of the administrative groups in your environment.</b></p>
        <ul>
            <li style="font-weight: bold;" value="1"><span style="font-weight: normal;">Suggested time range: -1 day</span>
            </li>
            <li value="2">_sourceCategory=OS/Linux/S* "to group" or "default group changed" or "change user"<br />| parse regex "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s(?&lt;process_name&gt;\w*)(?:\[|:)" nodrop<br />| parse "add '*' to group '*'" as dest_user,dest_group nodrop<br />| parse "account added to group - account=*, group=*, gid=*," as dest_user,dest_group,dest_gid nodrop<br />| parse "account=*, uid=*, gid=*, old gid=*," as dest_user,dest_uid, dest_gid,src_gid nodrop<br />| parse "change user '*' GID from '*' to '*'" as dest_user,src_gid, dest_gid nodrop<br />| where dest_gid in("10","0","4") or dest_group in ("root", "wheel", "adm")</li>
        </ul>
        <p style="font-weight: bold;">Failed Password Changes</p>
        <p>Returns all failed attempts to change a user password.</p>
        <ul>
            <li style="font-weight: normal;" value="1">Suggested time range: -1 day</li>
            <li value="2">_sourceCategory=OS/Linux/* "Authentication failure"<br />| parse regex "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s(?&lt;process_name&gt;\w*)(?:\[|:)" nodrop<br />| parse "User *:" as dest_user nodrop<br />| parse " user=*" as dest_user nodrop<br />| where process_name="passwd"</li>
        </ul>
        <p style="font-weight: bold;">System Start</p>
        <p>Returns all incidents when the sytem starts (or restarts).</p>
        <ul>
            <li value="1">Suggested time range: -1 day</li>
            <li value="2">_sourceCategory=OS/Linux/System "Initializing cgroup subsys cpuset"<br />| parse regex "^(?&lt;StartTime&gt;\S*\s+\d+\s+\d+:\d+:\d+)\s(?&lt;dest_hostname&gt;\S*)\s(?&lt;process_name&gt;\w*)(?:\[\d+\]|):\s+" nodrop<br /></li>
        </ul>
        <p style="font-weight: bold;">Service Shutdown/Exiting</p>
        <p>Returns all instances when a service is shutting down or exiting. (Note that this query cannot capture the cases when there is no log when a service is down.)</p>
        <ul>
            <li value="1">Suggested time range: -1 day</li>
            <li value="2">_sourceCategory=OS/Linux/System ("exiting" or "exited" or "terminating" or "terminated" or "shutting")<br />| parse regex "\S*\s+\d+\s+\d+:\d+:\d+\s(?&lt;dest_hostname&gt;\S*)\s(?&lt;process_name&gt;\w*)(?:\[\d+\]|):\s+"<br />| where process_name !=""</li>
        </ul>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="Default.htm#Linux_OS.htm">Open topic with navigation</a>
        </p>
    </body>
</html>